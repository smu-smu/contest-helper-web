{"version":3,"sources":["hooks/user/useUser.ts","api/index.ts","api/User.ts","utils/notification.ts","modules/user.ts","hooks/user/useUserActions.ts","utils/constants.ts","components/AppHeader.tsx","components/user/SignInForm.tsx","components/ErrorMessage.tsx","hooks/useQuery.ts","components/SuccessMessage.tsx","screens/SignInScreen.tsx","api/Contest.ts","modules/contest.ts","components/contest/ContestItem.tsx","components/contest/ContestList.tsx","hooks/contest/useContest.ts","screens/ContestScreen.tsx","hooks/contest/useContestActions.ts","api/Team.ts","modules/team.ts","hooks/team/useTeamActions.ts","hooks/team/useTeam.ts","components/team/MemberItem.tsx","components/team/MemberList.tsx","components/team/TeamItem.tsx","components/team/TeamList.tsx","components/team/CreateTeamButton.tsx","screens/TeamsScreen.tsx","modules/signUp.ts","components/user/SignUpForm.tsx","hooks/signUp/useSignUpActions.ts","screens/SignUpScreen.tsx","hooks/signUp/useSignUp.ts","modules/createTeam.ts","components/team/CreateTeamForm.tsx","hooks/createTeam/useCreateTeamActions.ts","screens/CreateTeamScreen.tsx","hooks/createTeam/useCreateTeam.ts","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/rootSaga.ts","index.tsx","app/store.ts"],"names":["useUser","useSelector","state","user","baseUrl","ResponseStatus","Paths","signUp","a","async","id","password","username","url","axios","post","userId","name","response","status","signIn","data","saveTokenToServer","token","firebase","collection","doc","set","saveTokenToLocal","window","localStorage","setItem","requestSignIn","watchRequestSignIn","userSaga","Actions","createAction","signOut","signInCompleted","signInError","userReducer","createReducer","error","type","action","payload","call","reqSignIn","getItem","put","takeEvery","all","useUserActions","dispatch","useDispatch","useCallback","signInForm","requestSignOut","RouterPath","RouterUtils","contestId","signUpSuccess","AppHeader","extras","history","useHistory","key","onClick","push","title","extra","Form","create","form","getFieldDecorator","onSubmit","e","preventDefault","validateFields","err","values","Item","rules","required","message","prefix","placeholder","Password","htmlType","href","ErrorMessage","msg","showIcon","banner","useQuery","URLSearchParams","useLocation","search","SuccessMessage","SignInScreen","query","to","get","span","style","marginTop","getContests","map","contest","category","group","startDate","endDate","fetchContest","watchFetchRequested","contestSaga","fetchRequested","fetchLoading","fetchCompleted","contestReducer","ContestItem","ContestList","contestState","length","ContestScreen","requestFetch","useContestActions","useEffect","getTeams","team","users","members","contact","address","createdUserId","createdUser","pendingUsers","participants","paricipant","accountId","createTeam","registerTeam","teamId","permitRegister","rejectRegister","fetchTeam","registerRequested","permitRegistered","rejectRegistered","watchRequests","teamSaga","registerRequest","teamReducer","reqPermitRegister","reqRejectRegister","useTeamActions","fetchRequest","registerTeamRequest","permitRegisterRequest","rejectRegisterRequest","useTeam","MemberItem","member","isPending","isSupervisor","onPermitRegister","onRejectRegister","Fragment","MemberList","TeamItem","_s","indexOf","disabled","TeamList","teamState","itemLayout","dataSource","renderItem","item","CreateTeamButton","showCreateButton","find","TeamsScreen","requestSignUp","watchRequestSignUp","signUpSaga","request","success","signUpReducer","console","log","requestSignup","signUpForm","useSignUpActions","hasFeedback","validator","_rule","value","callback","force","getFieldValue","SignUpScreen","signUpState","requestCreateTeam","watchRequestCreateTeam","createTeamSaga","createTeamReducer","FormOptions","mapPropsToFields","props","createFormField","useCreateTeamActions","CreateTeamScreen","alert","Header","Layout","Content","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onGranted","messaging","getToken","then","currentToken","Notification","requestPermission","permission","onTokenRefresh","onMessage","App","basename","process","backgroundColor","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootReducer","combineReducers","rootSaga","store","sagaMiddleware","createSagaMiddleware","configureStore","reducer","middleware","getDefaultMiddleware","devTools","run","configureAppStore","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.253566c1.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/rootReducer\";\n\nexport default function useUser() {\n  const user = useSelector((state: RootState) => state.user);\n  return user;\n}","export const baseUrl = \"http://117.16.45.78:48080\";\n\nexport const ResponseStatus = {\n  ok: 200,\n  error: 400\n};\n\nexport interface Contest {\n  id: string;\n  name: string;\n  category: string[];\n  group: string;\n  startDate: string;\n  endDate: string;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n}\n\nexport interface Team {\n  id: string;\n  users: string[];\n  name: string;\n  contact: string;\n  createdUserId: string;\n  contestId: string;\n  pendingUsers: string[];\n}\n\nexport interface SignInForm {\n  id: string;\n  password: string;\n}\n\nexport interface SignUpForm {\n  id: string;\n  password: string;\n  username: string;\n}\n\nexport interface CreateTeamForm {\n  name: string;\n  contact: string;\n  contestId: string;\n  userId: string;\n}\n\nexport interface RegisterTeamForm {\n  teamId: string;\n  userId: string;\n  contestId: string;\n}\n\nexport interface ResponseWrapper<T> {\n  status: \"error\" | \"success\";\n  data: T | null;\n}","\nimport { SignUpForm, baseUrl, ResponseStatus, SignInForm } from \".\";\nimport axios from \"axios\";\n\nconst Paths = {\n  signUp: '/account/signup',\n  signIn: '/account/signin',\n  getProfile: '/accoutn/profile/'\n};\n\nexport async function signUp({ id, password, username }: SignUpForm) {\n  const url = baseUrl + Paths.signUp;\n  try {\n    const response = await axios.post(url, {\n      userId: id,\n      password,\n      name: username\n    });\n    return response.status === ResponseStatus.ok;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function signIn({ id, password }: SignInForm) {\n  const url = baseUrl + Paths.signIn;\n  try {\n    const { data } = await axios.post(url, {\n      userId: id,\n      password\n    });\n    return (data as any).userId ? data : null;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function getProfile(userId: string) {\n  const url = baseUrl + Paths.getProfile + userId;\n  try {\n    const response = await axios.get(url);\n  } catch (e) {\n\n  }\n}","import * as firebase from \"firebase\";\n\nexport function requestNotificationPermission(onGranted: () => void) {\n  Notification.requestPermission().then((permission) => {\n    if (permission === 'granted') {\n      onGranted();\n    }\n  });\n}\n\nexport function saveTokenToServer(token: string, userId: string) {\n  firebase.firestore().collection(\"tokens\").doc(userId).set({ token });\n}\n\nexport function saveTokenToLocal(token: string) {\n  window.localStorage.setItem(\"fcm_token\", token);\n}\n\nexport function loadTokenFromLocal(): string | null {\n  return window.localStorage.getItem(\"fcm_token\");\n}","import { User, SignInForm } from \"../api\";\nimport { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { takeEvery, all, put, call } from \"redux-saga/effects\";\nimport { signIn as reqSignIn } from \"../api/User\";\nimport { saveTokenToServer, loadTokenFromLocal } from \"../utils/notification\";\n\nconst Actions = {\n  signIn: 'user/signIn',\n  signOut: 'user/signOut',\n  signInCompleted: 'user/signInCompleted',\n  signInError: 'user/signInError'\n};\n\nexport type UserState =\n  { status: 'unauthorized'; error: boolean; } |\n  { status: 'authorized', data: User; };\n\nconst initialState: UserState = { status: 'unauthorized', error: false };\n\nexport const signIn = createAction<SignInForm>(Actions.signIn);\nexport const signOut = createAction(Actions.signOut);\nconst signInCompleted = createAction<User>(Actions.signInCompleted);\nconst signInError = createAction(Actions.signInError);\n\nexport const userReducer = createReducer<UserState>(initialState, {\n  [signOut.type]: (state: UserState, action) => {\n    return { status: \"unauthorized\", error: false };\n  },\n  [signInCompleted.type]: (state: UserState, action) => {\n    return { status: \"authorized\", data: action.payload };\n  },\n  [signInError.type]: (state: UserState, action) => {\n    return { status: \"unauthorized\", error: true };\n  }\n});\n\nfunction* requestSignIn(action: any) {\n  const data = yield call(reqSignIn, action.payload as SignInForm);\n  if (data) {\n    const token = loadTokenFromLocal();\n    if (token) {\n      saveTokenToServer(token, data.userId);\n    }\n    yield put(signInCompleted({ username: data.name, id: data.userId }));\n  } else {\n    yield put(signInError());\n  }\n}\n\nfunction* watchRequestSignIn() {\n  yield takeEvery(Actions.signIn, requestSignIn);\n}\n\nexport function* userSaga() {\n  yield all([watchRequestSignIn()]);\n}","import { useDispatch } from \"react-redux\";\nimport { signIn, signOut } from \"../../modules/user\";\nimport { useCallback } from \"react\";\nimport { SignInForm } from \"../../api\";\n\nexport default function useUserActions() {\n  const dispatch = useDispatch();\n  const requestSignIn = useCallback(\n    (signInForm: SignInForm) => {\n      dispatch(signIn(signInForm));\n    }, [dispatch]\n  );\n  const requestSignOut = useCallback(() => {\n    dispatch(signOut());\n  }, [dispatch]);\n  return { requestSignIn, requestSignOut };\n}","export const RouterPath = {\n  root: \"/\",\n  signIn: \"/signIn\",\n  signUp: \"/signUp\",\n  teams: \"/teams\",\n  createTeam: \"/createTeam\"\n};\n\nexport const RouterUtils = {\n  teams: (contestId: string) => `${RouterPath.teams}?contest=${contestId}`,\n  createTeam: (contestId: string) => `${RouterPath.createTeam}?contest=${contestId}`,\n  signIn: (signUpSuccess: boolean) => `${RouterPath.signIn}?signUpSuccess=${signUpSuccess}`\n};\n\nexport const webPushPairCert = \"BHIUeY6TUDIOLO51cODMgcNz1ZZzzzNmDQ95x3C37O4aW_yqlR317V1NCuc8L58U9xuTF1rFG4mTmov7fSV4CDo\";","import React from 'react';\nimport { PageHeader, Button, Avatar } from 'antd';\nimport useUser from '../hooks/user/useUser';\nimport { useHistory } from 'react-router-dom';\nimport useUserActions from '../hooks/user/useUserActions';\nimport { RouterPath } from '../utils/constants';\n\nexport default function AppHeader() {\n  const user = useUser();\n  const history = useHistory();\n  const { requestSignOut } = useUserActions();\n\n  let extras;\n  if (user.status === \"unauthorized\") {\n    extras = [\n      <Button key=\"signIn\" type=\"primary\" onClick={ () => {\n        history.push(RouterPath.signIn);\n      } }>로그인</Button>\n    ];\n  } else {\n    extras = [\n      <Avatar key=\"avatar\">T</Avatar>,\n      <Button key=\"signOut\" type=\"primary\" onClick={ () => {\n        history.push(RouterPath.root);\n        requestSignOut();\n      } }>로그아웃</Button>\n    ];\n  }\n\n  return (\n    <PageHeader\n      title=\"Contest Helper\"\n      extra={ extras } />\n  );\n}\n","import React, { FormEvent } from 'react';\nimport { Form, Button, Input, Icon } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport useUserActions from '../../hooks/user/useUserActions';\nimport { RouterPath } from '../../utils/constants';\n\nfunction SignInForm({ form }: FormComponentProps) {\n  const { requestSignIn } = useUserActions();\n  const { getFieldDecorator } = form;\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      const { id, password } = values;\n      requestSignIn({ id: id, password: password });\n    });\n  };\n\n  return (\n    <Form onSubmit={ handleSubmit }>\n      <Form.Item>\n        {\n          getFieldDecorator('id', {\n            rules: [\n              { required: true, message: '아이디는 비워둘 수 없습니다' }\n            ]\n          })(\n            <Input\n              prefix={ <Icon type=\"user\" /> }\n              placeholder=\"아이디\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item>\n        {\n          getFieldDecorator('password', {\n            rules: [\n              { required: true, message: '비밀번호는 비워둘 수 없습니다' }\n            ]\n          })(\n            <Input.Password\n              prefix={ <Icon type=\"lock\" /> }\n              placeholder=\"비밀번호\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">로그인</Button>\n      </Form.Item>\n      <Form.Item>\n        혹은 <a href={ RouterPath.signUp }>회원가입 하기</a>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default Form.create()(SignInForm);","import React from 'react';\nimport { Alert } from 'antd';\n\ninterface IErrorMessageProps {\n  msg: string;\n}\n\nexport default function ErrorMessage({ msg }: IErrorMessageProps) {\n  return (\n    <Alert\n      showIcon\n      message={ msg }\n      type=\"error\"\n      banner\n    />\n  );\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}","import React from 'react';\nimport { Alert } from 'antd';\n\ninterface ISuccessMessageProps {\n  msg: string;\n}\n\nexport default function SuccessMessage({ msg }: ISuccessMessageProps) {\n  return (\n    <Alert\n      showIcon\n      message={ msg }\n      type=\"success\"\n      banner\n    />\n  );\n}\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport SignInForm from '../components/user/SignInForm';\nimport useUser from '../hooks/user/useUser';\nimport { Redirect } from 'react-router-dom';\nimport ErrorMessage from '../components/ErrorMessage';\nimport { RouterPath } from '../utils/constants';\nimport useQuery from '../hooks/useQuery';\nimport SuccessMessage from '../components/SuccessMessage';\n\nexport default function SignInScreen() {\n  const user = useUser();\n  const query = useQuery();\n\n  if (user.status === 'authorized') {\n    return <Redirect to={ RouterPath.root } />;\n  }\n\n  let msg = null;\n  if (user.status === 'unauthorized' && user.error) {\n    msg = <ErrorMessage msg=\"로그인에 실패하였습니다\" />;\n  } else if (query.get(\"signUpSuccess\")) {\n    msg = <SuccessMessage msg=\"회원가입에 성공하였습니다\" />;\n  }\n\n  return (\n    <Row>\n      <Col span={ 8 } />\n      <Col span={ 8 } style={ { marginTop: 16 } }>\n        { msg && msg }\n        <SignInForm />\n      </Col>\n      <Col span={ 8 } />\n    </Row>\n  );\n}\n","import axios from 'axios';\nimport { baseUrl, Contest } from '.';\n\nconst Paths = {\n  getContests: '/contest/list'\n};\n\nexport async function getContests() {\n  const url = baseUrl + Paths.getContests;\n  try {\n    const { data, status } = await axios.get(url);\n    return data.map((contest: any) => {\n      return {\n        id: contest.id,\n        name: contest.name,\n        category: contest.category,\n        group: contest.group,\n        startDate: contest.startDate,\n        endDate: contest.endDate\n      } as Contest;\n    });\n  } catch (e) {\n    return [];\n  }\n}","import { Contest } from \"../api\";\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { all, takeEvery, put, call } from \"redux-saga/effects\";\nimport { getContests } from \"../api/Contest\";\n\nconst Actions = {\n  fetchRequested: 'contest/fetchRequested',\n  fetchLoading: 'contest/fetchLoading',\n  fetchCompleted: 'content/fetchCompleted'\n};\n\nexport type ContentState =\n  { status: 'loading'; } |\n  { status: 'finished', data: Contest[]; };\n\nconst initialState: ContentState = { status: 'loading' };\n\nexport const fetchRequested = createAction(Actions.fetchRequested);\nconst fetchLoading = createAction(Actions.fetchLoading);\nconst fetchCompleted = createAction<Contest[]>(Actions.fetchCompleted);\n\nexport const contestReducer = createReducer<ContentState>(initialState, {\n  [fetchLoading.type]: (state: ContentState, action) => {\n    return { status: \"loading\" };\n  },\n  [fetchCompleted.type]: (state: ContentState, action) => {\n    return { status: \"finished\", data: action.payload };\n  }\n});\n\nfunction* fetchContest() {\n  yield put(fetchLoading());\n  const data: Contest[] = yield call(getContests);\n  yield put(fetchCompleted(data));\n}\n\nfunction* watchFetchRequested() {\n  yield takeEvery(Actions.fetchRequested, fetchContest);\n}\n\nexport function* contestSaga() {\n  yield all([watchFetchRequested()]);\n}","import React from 'react';\nimport { Contest } from '../../api';\nimport { Button } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { RouterUtils } from '../../utils/constants';\n\ninterface IContestItemProps {\n  contest: Contest;\n}\n\nexport default function ContestItem({ contest }: IContestItemProps) {\n  const history = useHistory();\n\n  const handleShowTeams = () => {\n    history.push(RouterUtils.teams(contest.id));\n  };\n\n  return (\n    <div>\n      <p>name: { contest.name }</p>\n      <p>group: { contest.group }</p>\n      <p>startDate: { contest.startDate }</p>\n      <p>endDate: { contest.endDate }</p>\n      <p>Category: { contest.category }</p>\n      <Button onClick={ handleShowTeams }>팀 목록</Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Spin, Empty } from 'antd';\nimport ContestItem from './ContestItem';\nimport useContest from '../../hooks/contest/useContest';\n\nexport default function ContestList() {\n  const contestState = useContest();\n\n  if (contestState.status === 'loading') return <Spin />;\n\n  if (contestState.data.length === 0) return <Empty />;\n\n  return (\n    <div>\n      {\n        contestState.data.map((contest) =>\n          <ContestItem\n            key={ contest.id }\n            contest={ contest }\n          />)\n      }\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/rootReducer\";\n\nexport default function useContest() {\n  const contest = useSelector((state: RootState) => state.contest);\n  return contest;\n}","import React, { useEffect } from 'react';\nimport useContestActions from '../hooks/contest/useContestActions';\nimport ContestList from '../components/contest/ContestList';\n\nexport default function ContestScreen() {\n  const { requestFetch } = useContestActions();\n\n  useEffect(() => {\n    requestFetch();\n  });\n\n  return (\n    <ContestList />\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { fetchRequested } from \"../../modules/contest\";\nimport { useCallback } from \"react\";\n\nexport default function useContestActions() {\n  const dispatch = useDispatch();\n  const requestFetch = useCallback(\n    () => {\n      dispatch(fetchRequested());\n    }, [dispatch],\n  );\n  return { requestFetch };\n}","import axios from \"axios\";\nimport { baseUrl, ResponseWrapper, Team, ResponseStatus, CreateTeamForm, RegisterTeamForm } from \".\";\n\nconst Paths = {\n  getTeams: (contestId: string) => `/team/contestId/${contestId}`,\n  createTeam: '/team',\n  registerTeam: '/team/request',\n  premitRegister: '/team/permit',\n  rejectRegister: '/team/reject'\n};\n\nexport async function getTeams(contestId: string): Promise<ResponseWrapper<Team[]>> {\n  const url = baseUrl + Paths.getTeams(contestId);\n  try {\n    const { data, status } = await axios.get(url);\n    if (status === ResponseStatus.error) {\n      return { status: \"error\", data: null };\n    }\n\n    return {\n      status: \"success\",\n      data: data.map((team: any) => {\n        return {\n          id: team.name,\n          name: team.name,\n          users: team.members,\n          contact: team.address,\n          createdUserId: team.createdUser,\n          contestId: team.contestId,\n          pendingUsers: team.participants.map((paricipant: any) => paricipant.accountId)\n        } as Team;\n      })\n    };\n  } catch (e) {\n    return { status: \"error\", data: null };\n  }\n}\n\nexport async function createTeam({ name, contestId, contact, userId }: CreateTeamForm) {\n  const url = baseUrl + Paths.createTeam;\n  try {\n    const { data, status } = await axios.post(url, {\n      name,\n      contestId,\n      address: contact,\n      createdUser: userId\n    });\n    return status === ResponseStatus.ok;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function registerTeam({ userId, teamId }: RegisterTeamForm) {\n  const url = baseUrl + Paths.registerTeam;\n  try {\n    const { data, status } = await axios.post(url, {\n      accountId: userId,\n      teamId\n    });\n    return status === ResponseStatus.ok && data !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function permitRegister({ userId, teamId }: RegisterTeamForm) {\n  const url = baseUrl + Paths.premitRegister;\n  try {\n    const { data, status } = await axios.post(url, {\n      accountId: userId,\n      teamId\n    });\n    return status === ResponseStatus.ok && data !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function rejectRegister({ userId, teamId }: RegisterTeamForm) {\n  const url = baseUrl + Paths.rejectRegister;\n  try {\n    const { data, status } = await axios.post(url, {\n      accountId: userId,\n      teamId\n    });\n    return status === ResponseStatus.ok && data !== null;\n  } catch (e) {\n    return false;\n  }\n}","import { Team, ResponseWrapper, RegisterTeamForm } from \"../api\";\nimport { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { put, takeEvery, all, call } from \"redux-saga/effects\";\nimport { getTeams, registerTeam, permitRegister as reqPermitRegister, rejectRegister as reqRejectRegister } from \"../api/Team\";\n\nconst Actions = {\n  fetchRequested: 'team/fetchRequested',\n  fetchLoading: 'team/fetchLoading',\n  fetchCompleted: 'team/fetchCompleted',\n  registerRequest: 'team/registerRequest',\n  permitRegister: 'team/permitRegister',\n  rejectRegister: 'team/rejectRegister'\n};\n\nexport type TeamState =\n  { status: 'loading'; } |\n  { status: 'finished', data: Team[]; };\n\nconst initialState: TeamState = { status: 'loading' };\n\nexport const fetchRequested = createAction<string>(Actions.fetchRequested);\nconst fetchLoading = createAction(Actions.fetchLoading);\nconst fetchCompleted = createAction<Team[]>(Actions.fetchCompleted);\nexport const registerRequest = createAction<RegisterTeamForm>(Actions.registerRequest);\nexport const permitRegister = createAction<RegisterTeamForm>(Actions.permitRegister);\nexport const rejectRegister = createAction<RegisterTeamForm>(Actions.rejectRegister);\n\nexport const teamReducer = createReducer<TeamState>(initialState, {\n  [fetchLoading.type]: (state: TeamState, action) => {\n    return { status: \"loading\" };\n  },\n  [fetchCompleted.type]: (state: TeamState, action) => {\n    return { status: \"finished\", data: action.payload };\n  },\n});\n\nfunction* fetchTeam(action: any) {\n  yield put(fetchLoading());\n  const contestId = action.payload as string;\n  const response: ResponseWrapper<Team[]> = yield call(getTeams, contestId);\n  if (response.status === 'success' && response.data) {\n    yield put(fetchCompleted(response.data));\n  }\n}\n\nfunction* registerRequested(action: any) {\n  const form = action.payload as RegisterTeamForm;\n  const data = yield call(registerTeam, form);\n  yield put(fetchRequested(form.contestId));\n}\n\nfunction* permitRegistered(action: any) {\n  const form = action.payload as RegisterTeamForm;\n  const data = yield call(reqPermitRegister, form);\n  yield put(fetchRequested(form.contestId));\n}\n\nfunction* rejectRegistered(action: any) {\n  const form = action.payload as RegisterTeamForm;\n  const data = yield call(reqRejectRegister, form);\n  yield put(fetchRequested(form.contestId));\n}\n\nexport function* watchRequests() {\n  yield takeEvery(Actions.fetchRequested, fetchTeam);\n  yield takeEvery(Actions.registerRequest, registerRequested);\n  yield takeEvery(Actions.permitRegister, permitRegistered);\n  yield takeEvery(Actions.rejectRegister, rejectRegistered);\n}\n\nexport function* teamSaga() {\n  yield all([watchRequests()]);\n}","import { useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { fetchRequested, registerRequest, permitRegister, rejectRegister } from \"../../modules/team\";\nimport { RegisterTeamForm } from \"../../api\";\n\nexport default function useTeamActions() {\n  const dispatch = useDispatch();\n  const fetchRequest = useCallback(\n    (contestId: string) => {\n      dispatch(fetchRequested(contestId));\n    }, [dispatch]);\n  const registerTeamRequest = useCallback(\n    (form: RegisterTeamForm) => {\n      dispatch(registerRequest(form));\n    }, [dispatch]\n  );\n  const permitRegisterRequest = useCallback(\n    (form: RegisterTeamForm) => {\n      dispatch(permitRegister(form));\n    }, [dispatch]\n  );\n  const rejectRegisterRequest = useCallback(\n    (form: RegisterTeamForm) => {\n      dispatch(rejectRegister(form));\n    }, [dispatch]\n  );\n  return {\n    fetchRequest, registerTeamRequest, permitRegisterRequest, rejectRegisterRequest\n  };\n}","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/rootReducer\";\n\nexport function useTeam() {\n  const team = useSelector((state: RootState) => state.team);\n  return team;\n}","import React from 'react';\nimport { Button } from 'antd';\n\ninterface IMemberItemProps {\n  member: string;\n  isPending?: boolean;\n  isSupervisor?: boolean;\n  onPermitRegister: (userId: string) => void;\n  onRejectRegister: (userId: string) => void;\n}\n\nexport default function MemberItem({ member, isPending, isSupervisor, onPermitRegister, onRejectRegister }: IMemberItemProps) {\n  return (\n    <div>\n      <p>Member: { member }</p>\n      {\n        isPending && isSupervisor &&\n        <React.Fragment>\n          <Button onClick={ () => onPermitRegister(member) }>승인</Button>\n          <Button onClick={ () => onRejectRegister(member) }>거부</Button>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport MemberItem from './MemberItem';\n\ninterface IMemberListProps {\n  members: string[];\n  isPending?: boolean;\n  isSupervisor?: boolean;\n  onPermitRegister: (userId: string) => void;\n  onRejectRegister: (userId: string) => void;\n}\n\nexport default function MemberList({ members, isPending = false, isSupervisor = false, onPermitRegister, onRejectRegister }: IMemberListProps) {\n  return (\n    <React.Fragment>\n      {\n        members.map(\n          (member) => <MemberItem\n            key={ member }\n            member={ member }\n            isPending={ isPending }\n            isSupervisor={ isSupervisor }\n            onPermitRegister={ onPermitRegister }\n            onRejectRegister={ onRejectRegister }\n          />\n        )\n      }\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Team, User } from '../../api';\nimport MemberList from './MemberList';\nimport { Button, Card } from 'antd';\nimport useTeamActions from '../../hooks/team/useTeamActions';\n\ninterface ITeamITemProps {\n  team: Team;\n  user: User | null;\n}\n\nexport default function TeamItem({ team, user }: ITeamITemProps) {\n  const { registerTeamRequest, permitRegisterRequest, rejectRegisterRequest } = useTeamActions();\n\n  const handleRegisterTeam = () => {\n    if (user) {\n      registerTeamRequest({ userId: user.id, teamId: team.id, contestId: team.contestId });\n    }\n  };\n\n  const handlePermitRegister = (id: string) => {\n    permitRegisterRequest({ userId: id, teamId: team.id, contestId: team.contestId });\n  };\n\n  const handleRejectRegister = (id: string) => {\n    rejectRegisterRequest({ userId: id, teamId: team.id, contestId: team.contestId });\n  };\n\n  const isSupervisor = user && team.createdUserId === user.id;\n\n  return (\n    <Card title={ team.name }>\n      <p>{ team.contact }</p>\n      <p>생성한 사람: { team.createdUserId }</p>\n      <MemberList members={ team.users } onPermitRegister={ (_s) => { } } onRejectRegister={ (_s) => { } } />\n      {\n        user && (team.users.indexOf(user.id) || !isSupervisor) &&\n        <Button onClick={ handleRegisterTeam } disabled={ team.pendingUsers.indexOf(user.id) >= 0 }>가입 신청</Button>\n      }\n      <p>Pending</p>\n      { isSupervisor && <MemberList\n        members={ team.pendingUsers }\n        isSupervisor\n        isPending\n        onPermitRegister={ handlePermitRegister }\n        onRejectRegister={ handleRejectRegister } /> }\n    </Card >\n  );\n};\n","import React from 'react';\nimport { useTeam } from '../../hooks/team/useTeam';\nimport { Spin, Empty, List } from 'antd';\nimport TeamItem from './TeamItem';\nimport useUser from '../../hooks/user/useUser';\n\nexport default function TeamList() {\n  const user = useUser();\n  const teamState = useTeam();\n\n  if (teamState.status === 'loading') return <Spin />;\n\n  if (teamState.data.length === 0) return <Empty />;\n\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={ teamState.data }\n      renderItem={ item =>\n        <TeamItem team={ item } user={ user.status === \"authorized\" ? user.data : null } />\n      }>\n    </List>\n  );\n}\n","import React from 'react';\nimport useUser from '../../hooks/user/useUser';\nimport { useTeam } from '../../hooks/team/useTeam';\nimport { useHistory } from 'react-router-dom';\nimport { RouterUtils } from '../../utils/constants';\nimport { Button } from 'antd';\n\ninterface ICreateTeamButtonProps {\n  contestId: string | null;\n}\n\nexport default function CreateTeamButton({ contestId }: ICreateTeamButtonProps) {\n  const user = useUser();\n  const team = useTeam();\n  const history = useHistory();\n\n  const handleCreateTeam = () => {\n    if (contestId) {\n      history.push(RouterUtils.createTeam(contestId));\n    }\n  };\n\n  const showCreateButton = user.status === \"authorized\"\n    && team.status === \"finished\"\n    && team.data.find((e) => e.createdUserId === user.data.id) == null;\n\n  return (\n    <React.Fragment>\n      { showCreateButton && <Button onClick={ handleCreateTeam }>팀 생성</Button> }\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport useTeamActions from '../hooks/team/useTeamActions';\nimport TeamList from '../components/team/TeamList';\nimport useQuery from '../hooks/useQuery';\nimport CreateTeamButton from '../components/team/CreateTeamButton';\n\nexport default function TeamsScreen() {\n  const { fetchRequest } = useTeamActions();\n  const query = useQuery();\n  const contestId = query.get(\"contest\");\n\n  useEffect(() => {\n    if (contestId) {\n      fetchRequest(contestId);\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <CreateTeamButton contestId={ contestId } />\n      <TeamList />\n    </React.Fragment>\n  );\n}\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { SignUpForm } from \"../api\";\nimport { put, takeEvery, all, call } from \"redux-saga/effects\";\nimport { signUp } from \"../api/User\";\n\nconst Actions = {\n  request: 'signUp/request',\n  success: 'signUp/success',\n  error: 'signUp/error'\n};\n\nexport type SignUpState =\n  { status: 'none', error: boolean; } |\n  { status: 'success'; };\n\nconst initialState: SignUpState = { status: 'none', error: false };\n\nexport const request = createAction<SignUpForm>(Actions.request);\nconst success = createAction(Actions.success);\nconst error = createAction(Actions.error);\n\nexport const signUpReducer = createReducer<SignUpState>(initialState, {\n  [success.type]: (state: SignUpState, action) => {\n    return { status: 'success' };\n  },\n  [error.type]: (state: SignUpState, action) => {\n    return { status: 'none', error: true };\n  }\n});\n\nfunction* requestSignUp(action: any) {\n  const data = yield call(signUp, action.payload as SignUpForm);\n  console.log(data);\n  yield put(data ? success() : error());\n}\n\nfunction* watchRequestSignUp() {\n  yield takeEvery(Actions.request, requestSignUp);\n}\n\nexport function* signUpSaga() {\n  yield all([watchRequestSignUp()]);\n}","import React, { FormEvent } from 'react';\nimport { Form, Button, Input, Icon } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport useSignUpActions from '../../hooks/signUp/useSignUpActions';\n\nfunction SignUpForm({ form }: FormComponentProps) {\n  const { requestSignup } = useSignUpActions();\n  const { getFieldDecorator } = form;\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      const { id, password, name } = values;\n      requestSignup({ id: id, password: password, username: name });\n    });\n  };\n\n  const compareToFirstPassword = (_rule: any, value: any, callback: any) => {\n    if (value && value !== form.getFieldValue('password')) {\n      callback('비밀번호가 일치하지 않습니다');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (_rule: any, value: any, callback: any) => {\n    if (value) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  return (\n    <Form onSubmit={ handleSubmit }>\n      <Form.Item>\n        {\n          getFieldDecorator('name', {\n            rules: [\n              { required: true, message: '이름은 비워둘 수 없습니다' }\n            ]\n          })(\n            <Input\n              placeholder=\"이름\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item>\n        {\n          getFieldDecorator('id', {\n            rules: [\n              { required: true, message: '아이디는 비워둘 수 없습니다' }\n            ]\n          })(\n            <Input\n              placeholder=\"아이디\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item hasFeedback>\n        {\n          getFieldDecorator('password', {\n            rules: [\n              { required: true, message: '비밀번호는 비워둘 수 없습니다' },\n              { validator: validateToNextPassword }\n            ]\n          })(\n            <Input.Password\n              prefix={ <Icon type=\"lock\" /> }\n              placeholder=\"비밀번호\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item hasFeedback>\n        {\n          getFieldDecorator('password-recheck', {\n            rules: [\n              { required: true, message: '비밀번호 확인은 비워둘 수 없습니다' },\n              { validator: compareToFirstPassword }\n            ]\n          })(\n            <Input.Password\n              prefix={ <Icon type=\"lock\" /> }\n              placeholder=\"비밀번호 확인\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">회원가입</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default Form.create()(SignUpForm);","import { useDispatch } from \"react-redux\";\nimport { request } from \"../../modules/signUp\";\nimport { SignUpForm } from \"../../api\";\nimport { useCallback } from \"react\";\n\nexport default function useSignUpActions() {\n  const dispatch = useDispatch();\n  const requestSignup = useCallback(\n    (signUpForm: SignUpForm) => dispatch(request(signUpForm)),\n    [dispatch]\n  );\n  return { requestSignup };\n}","import React from 'react';\nimport SignUpForm from '../components/user/SignUpForm';\nimport { Row, Col } from 'antd';\nimport useSignUp from '../hooks/signUp/useSignUp';\nimport { Redirect } from 'react-router-dom';\nimport { RouterUtils } from '../utils/constants';\nimport ErrorMessage from '../components/ErrorMessage';\n\nexport default function SignUpScreen() {\n  const signUpState = useSignUp();\n\n  if (signUpState.status === 'success')\n    return <Redirect to={ RouterUtils.signIn(true) } />;\n\n  return (\n    <Row>\n      <Col span={ 8 } />\n      <Col span={ 8 } style={ { marginTop: 16 } }>\n        {\n          signUpState.error &&\n          <ErrorMessage msg=\"회원가입이 실패하였습니다\" />\n        }\n        <SignUpForm />\n      </Col>\n      <Col span={ 8 } />\n    </Row>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/rootReducer\";\n\nexport default function useSignUp() {\n  const signUp = useSelector((state: RootState) => state.signUp);\n  return signUp;\n}","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { CreateTeamForm } from \"../api\";\nimport { put, takeEvery, all, call } from \"redux-saga/effects\";\nimport { createTeam } from \"../api/Team\";\n\nconst Actions = {\n  request: 'createTeam/request',\n  success: 'createTeam/success',\n  error: 'createTeam/error'\n};\n\nexport type CreateTeamState =\n  { status: 'none', error: boolean; } |\n  { status: 'success'; };\n\nconst initialState: CreateTeamState = { status: 'none', error: false };\n\nexport const request = createAction<CreateTeamForm>(Actions.request);\nconst success = createAction(Actions.success);\nconst error = createAction(Actions.error);\n\nexport const createTeamReducer = createReducer<CreateTeamState>(initialState, {\n  [success.type]: (state: CreateTeamState, action) => {\n    return { status: 'success' };\n  },\n  [error.type]: (state: CreateTeamState, action) => {\n    return { status: 'none', error: true };\n  }\n});\n\nfunction* requestCreateTeam(action: any) {\n  const data = yield call(createTeam, action.payload as CreateTeamForm);\n  yield put(data ? success() : error());\n}\n\nfunction* watchRequestCreateTeam() {\n  yield takeEvery(Actions.request, requestCreateTeam);\n}\n\nexport function* createTeamSaga() {\n  yield all([watchRequestCreateTeam()]);\n}","import React, { FormEvent } from 'react';\nimport { Form, Button, Input, Icon } from 'antd';\nimport { FormComponentProps, FormCreateOption } from 'antd/lib/form';\nimport useCreateTeamActions from '../../hooks/createTeam/useCreateTeamActions';\n\ninterface ICreateTeamFormProps extends FormComponentProps {\n  contestId: string;\n  userId: string;\n}\n\nfunction CreateTeamForm({ form, contestId, userId }: ICreateTeamFormProps) {\n  const { requestCreateTeam } = useCreateTeamActions();\n  const { getFieldDecorator } = form;\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      const { name, contact } = values;\n      requestCreateTeam({ contestId: contestId, name: name, contact: contact, userId: userId });\n    });\n  };\n\n  return (\n    <Form onSubmit={ handleSubmit }>\n      <Form.Item>\n        {\n          getFieldDecorator('name', {\n            rules: [\n              { required: true, message: '팀 이름은 비워둘 수 없습니다' }\n            ]\n          })(\n            <Input\n              placeholder=\"팀 이름\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item>\n        {\n          getFieldDecorator('contact', {\n            rules: [\n              { required: true, message: '연락처는 비워둘 수 없습니다' }\n            ]\n          })(\n            <Input\n              prefix={ <Icon type=\"contacts\" /> }\n              placeholder=\"연락처\"\n            />\n          )\n        }\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">팀 생성</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nconst mapPropsToFields = (props: ICreateTeamFormProps) => {\n  const { contestId } = props;\n  return {\n    contestId: Form.createFormField({ value: contestId })\n  };\n};\n\nconst FormOptions: FormCreateOption<ICreateTeamFormProps> = {\n  mapPropsToFields\n};\n\nexport default Form.create(FormOptions)(CreateTeamForm);","import { useDispatch } from \"react-redux\";\nimport { request } from \"../../modules/createTeam\";\nimport { CreateTeamForm } from \"../../api\";\nimport { useCallback } from \"react\";\n\nexport default function useCreateTeamActions() {\n  const dispatch = useDispatch();\n  const requestCreateTeam = useCallback(\n    (form: CreateTeamForm) => {\n      dispatch(request(form));\n    },\n    [dispatch],\n  );\n  return { requestCreateTeam };\n}","import React from 'react';\nimport useUser from '../hooks/user/useUser';\nimport { Redirect } from 'react-router-dom';\nimport { RouterPath, RouterUtils } from '../utils/constants';\nimport { Row, Col } from 'antd';\nimport CreateTeamForm from '../components/team/CreateTeamForm';\nimport useQuery from '../hooks/useQuery';\nimport useCreateTeam from '../hooks/createTeam/useCreateTeam';\nimport ErrorMessage from '../components/ErrorMessage';\n\nexport default function CreateTeamScreen() {\n  const user = useUser();\n  const query = useQuery();\n  const createTeam = useCreateTeam();\n\n  if (user.status === 'unauthorized') {\n    alert(\"로그인 후에만 이용할 수 있습니다\");\n    return <Redirect to={ RouterPath.root } />;\n  }\n\n  const contestId = query.get(\"contest\");\n  if (!contestId) {\n    alert(\"대상 공모전이 지정되지 않았습니다\");\n    return <Redirect to={ RouterPath.root } />;\n  }\n\n  if (createTeam.status === 'success') {\n    return <Redirect to={ RouterUtils.teams(contestId) } />;\n  }\n\n  return (\n    <Row>\n      <Col span={ 8 } />\n      <Col span={ 8 } style={ { marginTop: 16 } }>\n        {\n          createTeam.error &&\n          <ErrorMessage msg=\"팀 생성이 실패하였습니다\" />\n        }\n        <CreateTeamForm contestId={ contestId } userId={ user.data.id } />\n      </Col>\n      <Col span={ 8 } />\n    </Row>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/rootReducer\";\n\nexport default function useCreateTeam() {\n  const createTeam = useSelector((state: RootState) => state.createTeam);\n  return createTeam;\n}","import React from 'react';\nimport './App.css';\nimport { Layout } from 'antd';\nimport AppHeader from '../components/AppHeader';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SignInScreen from '../screens/SignInScreen';\nimport ContestScreen from '../screens/ContestScreen';\nimport TeamsScreen from '../screens/TeamsScreen';\nimport SignUpScreen from '../screens/SignUpScreen';\nimport { RouterPath } from \"../utils/constants\";\nimport CreateTeamScreen from '../screens/CreateTeamScreen';\nimport firebase from 'firebase';\nimport { requestNotificationPermission, saveTokenToLocal } from '../utils/notification';\n\nconst { Header, Content } = Layout;\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCYHsBGxW8cH7Sqi94hqT2OhgYSSzP6J9E\",\n  authDomain: \"contest-helper-d570a.firebaseapp.com\",\n  databaseURL: \"https://contest-helper-d570a.firebaseio.com\",\n  projectId: \"contest-helper-d570a\",\n  storageBucket: \"contest-helper-d570a.appspot.com\",\n  messagingSenderId: \"28027376772\",\n  appId: \"1:28027376772:web:78fb55a0e797092f60ded1\",\n  measurementId: \"G-KH6NGCW6E5\"\n});\n\nconst messaging = firebase.messaging();\n\nrequestNotificationPermission(() => {\n  messaging.getToken().then((currentToken) => {\n    if (currentToken) {\n      saveTokenToLocal(currentToken);\n    }\n  });\n\n});\n\nmessaging.onTokenRefresh(() => {\n  messaging.getToken().then((currentToken) => {\n    if (currentToken) {\n      saveTokenToLocal(currentToken);\n    }\n  });\n});\n\nmessaging.onMessage((payload) => {\n  console.log(payload);\n  new Notification(\"Hello Notification\");\n});\n\nconst App: React.FC = () => {\n\n  return (\n    <Router basename={ process.env.PUBLIC_URL }>\n      <Layout>\n        <Header style={ { backgroundColor: \"#f5f5f5\" } }>\n          <AppHeader />\n        </Header>\n        <Content>\n          <Switch>\n            <Route exact path={ RouterPath.root }>\n              <ContestScreen />\n            </Route>\n            <Route path={ RouterPath.signIn }>\n              <SignInScreen />\n            </Route>\n            <Route path={ RouterPath.signUp }>\n              <SignUpScreen />\n            </Route>\n            <Route path={ RouterPath.teams }>\n              <TeamsScreen />\n            </Route>\n            <Route path={ RouterPath.createTeam }>\n              <CreateTeamScreen />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { contestReducer } from \"../modules/contest\";\nimport { userReducer } from \"../modules/user\";\nimport { teamReducer } from \"../modules/team\";\nimport { signUpReducer } from \"../modules/signUp\";\nimport { createTeamReducer } from \"../modules/createTeam\";\n\nconst rootReducer = combineReducers({\n  contest: contestReducer,\n  user: userReducer,\n  team: teamReducer,\n  signUp: signUpReducer,\n  createTeam: createTeamReducer\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { all } from \"redux-saga/effects\";\nimport { contestSaga } from \"../modules/contest\";\nimport { userSaga } from \"../modules/user\";\nimport { teamSaga } from \"../modules/team\";\nimport { signUpSaga } from \"../modules/signUp\";\nimport { createTeamSaga } from \"../modules/createTeam\";\n\nexport default function* rootSaga() {\n  yield all([\n    contestSaga(),\n    userSaga(),\n    teamSaga(),\n    signUpSaga(),\n    createTeamSaga()\n  ]);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureAppStore from './app/store';\n\nconst store = configureAppStore();\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nexport default function configureAppStore() {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [sagaMiddleware, ...getDefaultMiddleware()],\n    devTools: true\n  });\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}"],"sourceRoot":""}